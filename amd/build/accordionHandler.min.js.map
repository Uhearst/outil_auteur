{"version":3,"file":"accordionHandler.min.js","sources":["../src/accordionHandler.js"],"sourcesContent":["const getCollapsibles = (anchor) => {\n    let collapsibles = document.querySelector('#' + anchor).querySelectorAll('[data-toggle=\"collapse\"]');\n\n    let collapsiblesArray = Array.from(collapsibles);\n\n    return collapsiblesArray.filter(collapsible => {\n            return collapsible.getAttribute('aria-controls').includes('collapse');\n        }\n    );\n};\n\n\nconst getAnchor = () => {\n    let anchors = window.location.href.includes(\"#\") ?\n        [window.location.href.substring(window.location.href.lastIndexOf(\"#\") + 1)] : [\"\"];\n\n    if (window.$('#global-evaluations-container').length > 0) {\n        anchors = ['global-evaluations-container'];\n    }\n\n    if (window.$('#section-subquestions-container').length > 0) {\n        anchors = ['section-subquestions-container'];\n    }\n\n    if (window.$('#subquestion-explorations-container').length > 0) {\n        anchors = ['subquestion-explorations-container', 'subquestion-resources-container'];\n    }\n\n    return anchors;\n};\n\n\nconst clickAndRetry = (collapsibleHeader, state = true) => {\n    let interval = setInterval(function() {\n        // Try to open\n        if (state) {\n            if (collapsibleHeader.classList && collapsibleHeader.classList.contains('collapsed')) {\n                collapsibleHeader.click();\n            } else {\n                clearInterval(interval);\n            }\n        }\n        // Try to close\n        else {\n            if (collapsibleHeader.classList && !collapsibleHeader.classList.contains('collapsed')) {\n                collapsibleHeader.click();\n            } else {\n                clearInterval(interval);\n            }\n        }\n    }, 100);\n};\n\n\nconst handleAccordion = (collapsible, anchor, forceOpen = false, withNavigation = true) => {\n\n    // Force open accordion if needed\n    if (forceOpen) {\n        clickAndRetry(collapsible);\n    }\n\n    collapsible.addEventListener('click', function() {\n        const myCollapseEl = document.querySelector('#' + collapsible.getAttribute('aria-controls'));\n        if (anchor.includes('objectives')) {\n            // Remove all localStorage for same anchor and learning anchor\n            localStorage.removeItem('focusOn_' + anchor + '-learning');\n            if (!myCollapseEl.id.includes('learning')) {\n                // Remove localStorage only if click on another teaching\n                localStorage.removeItem('focusOn_' + anchor);\n            }\n        } else {\n            // Remove all localStorage for same anchor\n            localStorage.removeItem('focusOn_' + anchor);\n        }\n        if (collapsible.getAttribute('aria-expanded') === 'false') {\n            // Set new localStorage on accordion opening\n            if (myCollapseEl.id.includes('learning')) {\n                let parent = myCollapseEl.closest('[id^=\"course_learning_objectives_container_\"]');\n                let index = parent.id.substring(parent.id.lastIndexOf('_') + 1, parent.id.length);\n                localStorage.setItem('focusOn_' + anchor, 'collapse_teaching_' + index);\n                localStorage.setItem('focusOn_' + anchor + '-learning', myCollapseEl.id);\n            } else {\n                localStorage.setItem('focusOn_' + anchor, myCollapseEl.id);\n\n                // Set Learning base LocalStorage if needed\n                if (myCollapseEl.id.includes('teaching')\n                    && localStorage.getItem('focusOn_' + anchor + '-learning') === null) {\n                    let selector = 'collapse_learning_'\n                        + myCollapseEl.id.substring(myCollapseEl.id.lastIndexOf('_') + 1) + '_0';\n                    let headerClickable = document.querySelector('[aria-controls=\"' + selector + '\"]');\n                    if (headerClickable.classList.contains('collapsed')) {\n                        clickAndRetry(document.querySelector('[aria-controls=\"' + selector + '\"]'));\n                    }\n                    localStorage.setItem('focusOn_' + anchor + '-learning', selector);\n                }\n            }\n\n            if (withNavigation) {\n                // Navigate to open accordion\n                let $card = window.$(this).closest('.card');\n                window.$('html,body').animate({\n                    scrollTop: $card.offset().top - 100\n                }, 250);\n            }\n        }\n    });\n};\n\n\nexport const initAccordionsAfterFillingForm = () => {\n    window.$(document).ready(function() {\n            let anchors = getAnchor();\n            anchors.forEach(anchor => {\n                let collapsibleId = localStorage.getItem('focusOn_' + anchor);\n                let elm = document.querySelector('[aria-controls=\"' + collapsibleId + '\"]');\n                if (collapsibleId && elm) {\n                    // Open accordion if present in localstorage\n                    clickAndRetry(elm);\n                    let subCollapsibleId = localStorage.getItem('focusOn_' + anchor + '-learning');\n                    let subElm = document.querySelector('[aria-controls=\"' + subCollapsibleId + '\"]');\n                    if (subCollapsibleId && subElm) {\n                        // Open SubAccordion if present in localstorage\n                        clickAndRetry(subElm);\n                    }\n                } else {\n                    // If no value is present in localstorage for anchor, open the first one\n                    let firstCollapsibleHeader = getCollapsibles(anchor)[0];\n                    clickAndRetry(firstCollapsibleHeader);\n                    if (anchor === 'displayable-form-objectives-container') {\n                        clickAndRetry(getCollapsibles(anchor)[1]);\n                    }\n                }\n            });\n    });\n};\n\n\nexport const handleAccordions = (withNavigation = true) => {\n    window.$(document).ready(function() {\n        let anchors = getAnchor();\n        // Handle accordions for current anchors\n        anchors.forEach(anchor => {\n            let collapsibles = getCollapsibles(anchor);\n            for (const collapsible of collapsibles) {\n                // Handle each accordion on page load, force open if only one present\n                if (collapsibles.length === 1\n                    || (collapsibles.length === 2\n                        && collapsibles[0].getAttribute('aria-controls') === 'collapse_teaching_0')) {\n                    handleAccordion(collapsible, anchor, true, withNavigation);\n                } else {\n                    handleAccordion(collapsible, anchor, false, withNavigation);\n                }\n            }\n        });\n    });\n};\n\n\nexport const handleNewAccordion = (prefix, counter) => {\n    let anchor = getAnchor();\n\n    // Here get all the headers to close them before addition\n    let headers = document.querySelectorAll('[id^=\"' + prefix.replace('#', '') + '\"]');\n    headers.forEach(header => {\n       let collapsibleHeader = header.querySelector('a');\n       clickAndRetry(collapsibleHeader, false);\n    });\n\n    // Add new click event handler for new accordion\n    let collapsibleHeader = document.querySelector(prefix + counter + ' a');\n    handleAccordion(collapsibleHeader, anchor, true);\n};"],"names":["getCollapsibles","anchor","collapsibles","document","querySelector","querySelectorAll","Array","from","filter","collapsible","getAttribute","includes","getAnchor","anchors","window","location","href","substring","lastIndexOf","$","length","clickAndRetry","collapsibleHeader","state","interval","setInterval","classList","contains","click","clearInterval","handleAccordion","forceOpen","withNavigation","addEventListener","myCollapseEl","localStorage","removeItem","id","parent","closest","index","setItem","getItem","selector","$card","this","animate","scrollTop","offset","top","ready","forEach","collapsibleId","elm","subCollapsibleId","subElm","firstCollapsibleHeader","prefix","counter","replace","header"],"mappings":"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"}