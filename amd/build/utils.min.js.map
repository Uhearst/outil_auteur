{"version":3,"file":"utils.min.js","sources":["../src/utils.js"],"sourcesContent":["/* eslint-disable max-len */\nimport {get_string as getString} from 'core/str';\nimport * as Config from 'core/config';\n\n// let tryCounter = 0;\nlet tinyMCEPromise;\n\nexport const initEditor = (response, draftIdElm) => {\n    let parsedResponse = JSON.parse(response);\n    draftIdElm.setAttribute('value', JSON.parse(parsedResponse.data.config).draftitemid);\n    let footers = document.querySelector('footer').querySelectorAll('.footer-section');\n    footers.forEach(footer => {\n        let scripts = footer.querySelectorAll('script');\n        if (scripts.length !== 0) {\n            let inlineDefaultConfiguration = document.createElement('script');\n            inlineDefaultConfiguration.text =\n                \"M.util.js_pending('editor_tiny/editor:defaultConfiguration'); \" +\n                \"require(['editor_tiny/editor'], (Tiny) => { \" +\n                \"Tiny.configureDefaultEditor(\" + parsedResponse.data.editorDefaultConfig + \"); \" +\n                \"M.util.js_complete('editor_tiny/editor:defaultConfiguration'); \" +\n                \"});\";\n            footer.appendChild(inlineDefaultConfiguration);\n\n            let inlineScript = document.createElement('script');\n            inlineScript.text =\n                \"M.util.js_pending('editor_tiny/editor'); \" +\n                \"require(['editor_tiny/editor'], (Tiny) => { \" +\n                \"Tiny.setupForElementId({ \" +\n                \"elementId: \\\"\" + parsedResponse.data.elementId + \"\\\", \" +\n                \"options: \" + parsedResponse.data.config + \"\" +\n                \"}); \" +\n                \"M.util.js_complete('editor_tiny/editor');\" +\n                \"});\";\n            footer.appendChild(inlineScript);\n        }\n    });\n};\n\n/**\n * @param {string} id\n */\nexport async function removeTinyEditor(id) {\n    const tinyMCE = await getTinyMCE();\n    tinyMCE.get()\n        .filter(\n            (editor) => editor.id === id\n        )\n        .forEach(\n            (editor) => {\n                editor.remove();\n            }\n        );\n}\n\nconst getTinyMCE = () => {\n\n    const baseUrl = `${Config.wwwroot}/lib/editor/tiny/loader.php/${M.cfg.jsrev}`;\n\n    if (tinyMCEPromise) {\n        return tinyMCEPromise;\n    }\n\n    tinyMCEPromise = new Promise((resolve, reject) => {\n        const head = document.querySelector('head');\n        let script = head.querySelector('script[data-tinymce=\"tinymce\"]');\n        if (script) {\n            resolve(window.tinyMCE);\n        }\n\n        script = document.createElement('script');\n        script.dataset.tinymce = 'tinymce';\n        script.src = `${baseUrl}/tinymce.js`;\n        script.async = true;\n\n        script.addEventListener('load', () => {\n            resolve(window.tinyMCE);\n        }, false);\n\n        script.addEventListener('error', (err) => {\n            reject(err);\n        }, false);\n\n        head.append(script);\n    });\n\n    return tinyMCEPromise;\n};\n\n/**\n * @param {String} str\n */\nexport function removeTags(str) {\n    if ((str === null) || (str === '')) {\n        return false;\n    } else {\n        str = str.toString();\n    }\n    str = str.replace(/<div class=\"h5p-placeholder\"[^>]*>([\\s\\S]*?)<\\/div>/, '');\n    return str.replace(/(<([^>]+)>)/ig, '');\n}\n\n/**\n * @param {Array} buttons\n */\nexport function prepareActionButton(buttons) {\n    let addingButtonsContainer = document.\n        querySelectorAll(\"[class='col-md-9 form-inline align-items-start felement']\");\n    if (addingButtonsContainer) {\n        addingButtonsContainer.forEach(function(addingButtonContainer) {\n            if (addingButtonContainer.dataset.fieldtype === 'button') {\n                addingButtonContainer.removeAttribute('class');\n                let childNodes = addingButtonContainer.childNodes;\n                childNodes.forEach(child => {\n                    if (child.type && child.type === 'button') {\n                        child.classList.remove('btn-secondary');\n                    }\n                });\n            }\n\n        });\n    }\n    let addingButtons = document.querySelectorAll(\"[class*='add_action_button']\");\n    if (addingButtons) {\n        addingButtons.forEach(function(addingButton) {\n            let childNodes = addingButton.childNodes;\n            childNodes.forEach(child => {\n                child.removeAttribute('class');\n            });\n        });\n    }\n\n    buttons.forEach(button => {\n        if (button.type === 0) {\n            let initialRemoveButton = document.getElementById('fitem_id_remove_' + button.id);\n            if (initialRemoveButton) {\n                initialRemoveButton.firstElementChild.style.setProperty(\"display\", \"none\", \"important\");\n            }\n        } else {\n            let initialRemoveButton = document.getElementById('fitem_id_add_' + button.id);\n            if (initialRemoveButton) {\n                initialRemoveButton.firstElementChild.style.setProperty(\"display\", \"none\", \"important\");\n            }\n        }\n    });\n}\n\n/**\n *\n */\nexport function formatEditorAndFileManager() {\n    let formContainer = document.getElementById('udeh-form');\n    let inputs = formContainer.querySelectorAll('[class^=\"form-group row  fitem   \"]');\n    inputs.forEach(input => {\n        if (input.children[1] && input.children[1].dataset\n            && (input.children[1].dataset.fieldtype === 'editor' || input.children[1].dataset.fieldtype === 'filemanager')) {\n            removeUselessColClasses(input.children[0]);\n            removeUselessColClasses(input.children[1]);\n            input.classList.add('mx-2');\n            let label = input.querySelector('label');\n            if (label) {\n                label.classList.replace('m-0', 'm-1');\n            }\n        }\n    });\n}\n\nconst removeUselessColClasses = (node) => {\n    Array.from(node.classList).forEach(className => {\n        if (className.startsWith('col-') && !className.startsWith('col-form')) {\n            node.classList.remove(className);\n        }\n    });\n\n    node.classList.add('col-12');\n};\n\n\n/**\n * @param {String} anchor\n */\nexport function appendAnchorToForm(anchor) {\n    let anchorInput = document.getElementById('anchor');\n    if (anchorInput === null) {\n        var input = document.createElement(\"input\");\n        input.setAttribute(\"type\", \"hidden\");\n        input.setAttribute(\"name\", \"anchor\");\n        input.setAttribute(\"id\", \"anchor\");\n        input.setAttribute(\"value\", anchor);\n        const formContainer = document.getElementById('form_container');\n        formContainer.appendChild(input);\n    } else {\n        anchorInput.setAttribute('value', anchor);\n    }\n}\n\n/**\n *\n */\n/*export function getAndSetScrollPosition() {\n    let addedType = localStorage.getItem(\"added-type\");\n    if (addedType !== null && addedType !== 'null' && addedType !== undefined) {\n        if (document.readyState !== 'loading') {\n            toggleAccordionFromPhpAddition(addedType);\n        } else {\n            document.addEventListener('DOMContentLoaded', function() {\n                toggleAccordionFromPhpAddition(addedType);\n            });\n        }\n    }\n\n    window.addEventListener(\"beforeunload\", () => {\n        if (document.activeElement && document.activeElement.classList && document.activeElement.classList.contains('add-button')) {\n            localStorage.setItem(\"added-type\", document.activeElement.name.substring(document.activeElement.name.indexOf('_' + 1)));\n        } else {\n            localStorage.setItem(\"added-type\", null);\n        }\n    });\n}\n\n/!**\n * @param {string} addedType\n *!/\nfunction toggleAccordionFromPhpAddition(addedType) {\n    let container = null;\n    let rows = null;\n    let forId = null;\n    if (addedType.includes('subquestion')) {\n        container = document.getElementById('section-subquestions-container');\n    } else {\n        forId = addedType.includes('resource') ? 'resources' : 'explorations';\n        container = document.getElementById('subquestion-' + forId + '-container');\n    }\n    rows = container.querySelectorAll('[class*=\"row-container\"]');\n    waitForAccordionIdWithInterval(rows[rows.length - 1]);\n}\n\n/!**\n * @param {object} currentElement\n *!/\nfunction waitForAccordionIdWithInterval(currentElement) {\n    let elementId = null;\n    let interval = setInterval(function() {\n        elementId = currentElement.firstElementChild.children[1].getAttribute('id');\n        if (elementId.includes('_')) {\n            handleAccordions(currentElement);\n            clearInterval(interval);\n        }\n    }, 100);\n}*/\n\n/**\n * @param {String} id\n */\nexport function appendStyleToAnchorMenuSection(id) {\n    let container = document.getElementById('collapse-course-container');\n    for (let i = 0; i < container.children.length; i++) {\n        if (!(container.children[i].getAttribute('class').includes('disabled-menu-element'))) {\n            container.children[i].setAttribute('class', 'mb-3');\n            updateIcon(container.children[i], 'actif', 'passif');\n        }\n    }\n    let element = document.getElementById(id);\n    element.classList.add('active-menu-element');\n    updateIcon(element, 'passif', 'actif', true);\n}\n\n/**\n * @param {Object} element\n * @param {String} previousValue\n * @param {String} newValue\n * @param {Boolean} isActive\n */\nfunction updateIcon(element, previousValue, newValue, isActive = false) {\n    let src = element.firstElementChild.firstElementChild.getAttribute('src');\n    if (src && src.includes(previousValue)) {\n        let newSrc = src.replace(previousValue, newValue);\n        element.firstElementChild.firstElementChild.setAttribute('src', newSrc);\n        element.setAttribute('onmouseout', 'this.firstElementChild.firstElementChild.setAttribute(\"src\", \"' + newSrc + '\")');\n    }\n    if (isActive) {\n        element.firstElementChild.setAttribute('class', 'active router');\n    } else {\n        element.firstElementChild.setAttribute('class', 'router');\n    }\n}\n\n/**\n *\n */\nexport function appendSizeToFileManager() {\n    let fileManagers = document.querySelectorAll('[id*=\"vignette\"]');\n    if (fileManagers) {\n        fileManagers.forEach(fileManager => {\n            if (fileManager.classList.contains('form-group')) {\n                let valueForFormat = '';\n                if (fileManager.getAttribute('id').includes('resource')) {\n                    valueForFormat = '125 x 80';\n                } else {\n                    valueForFormat = '364 x 215';\n                }\n                let restrictions = fileManager.querySelector('.fp-restrictions');\n                getString('evaluationrecommendedformat', 'format_udehauthoring')\n                    .then(\n                        (valueString) => {\n                            restrictions.firstElementChild.innerHTML =\n                                restrictions.firstElementChild.innerHTML + ', ' + valueString + valueForFormat;\n                        }\n                    )\n                    .catch(() => {\n                        restrictions.firstElementChild.innerHTML =\n                            restrictions.firstElementChild.innerHTML + ', Format recommandé: ' + valueForFormat;\n                    });\n\n            }\n        });\n    }\n}\n\n/**\n * @param {string} embedContainerId\n * @param {string} introductionContainerId\n * @param {Integer} i\n */\nexport function handleEmbed(embedContainerId, introductionContainerId, i = null) {\n\n    let customCheckbox = null;\n    let embedValContainer = null;\n    if (i !== null) {\n        customCheckbox = document.getElementById(('embed_selector_' + i));\n        embedValContainer = document.querySelector('[name=\"isembed[' + i + ']\"]');\n    } else {\n        customCheckbox = document.getElementById('embed_selector');\n        embedValContainer = document.querySelector('[name=\"isembed\"]');\n    }\n    if (embedValContainer.value === \"1\") {\n        customCheckbox.checked = true;\n    }\n    setEmbedVisible(customCheckbox, embedContainerId, introductionContainerId);\n\n    customCheckbox.addEventListener('click', function() {\n        setEmbedVisible(customCheckbox, embedContainerId, introductionContainerId);\n    });\n}\n\n/**\n * @param {object} customCheckbox\n * @param {string} embedContainerId\n * @param {string} introductionContainerId\n */\nfunction setEmbedVisible(customCheckbox, embedContainerId, introductionContainerId) {\n    let embedContainer = document.getElementById(embedContainerId);\n    let introductionContainer = document.getElementById(introductionContainerId);\n    if (customCheckbox.checked) {\n        embedContainer.style = '';\n        introductionContainer.style = 'display:none !important';\n    } else {\n        embedContainer.style = 'display:none !important';\n        introductionContainer.style = '';\n    }\n}\n\n/**\n * @param {int|string} id\n * @param {int|string} counter\n * @param {string} elementName\n * @param {string} prefix\n */\nexport function buildHiddenInput(id, counter, elementName, prefix) {\n    let element = document.getElementById(elementName);\n    let parent = element.parentNode;\n    let idValue = parent.querySelectorAll('[name=\"' + prefix + (counter) + '_id_value\"]');\n    if (idValue.length === 0) {\n        let input = document.createElement(\"input\");\n        input.setAttribute('name', prefix + (counter) + '_id_value');\n        input.setAttribute('value', id);\n        input.hidden = true;\n        parent.insertBefore(input, element);\n    }\n}\n\nexport const setEditorAfterCloning = (editorContainer, field, prefix, counter, parentUpdatedField = null, fromBtnClick = false) => {\n\n    // Container\n    editorContainer.querySelector('#fitem_id_' + prefix + '_' + field + '_0')\n        .setAttribute(\n            'id',\n            parentUpdatedField\n                ? 'fitem_id_' + prefix + '_' + parentUpdatedField + '_' + counter\n                : 'fitem_id_' + prefix + '_' + field + '_' + counter\n        );\n\n    // Label\n    if (editorContainer.querySelector('[for=\"id_' + prefix + '_' + field + '_0\"]')) {\n        editorContainer.querySelector('[for=\"id_' + prefix + '_' + field + '_0\"]')\n            .setAttribute('for', 'id_' + prefix + '_' + field + '_' + counter);\n    }\n\n    let textEvalParentNode = editorContainer.querySelector('#id_' + prefix + '_' + field + '_0').parentNode;\n\n    // Textarea, need to remove hidden elements from cloning\n    if (fromBtnClick || (textEvalParentNode && textEvalParentNode.querySelector('[role=\"application\"]') !== null)) {\n\n        if (textEvalParentNode.querySelector('[role=\"application\"]') !== null) {\n            textEvalParentNode.querySelector('[role=\"application\"]').remove();\n        }\n\n        if (textEvalParentNode.querySelector('.tox-tinymce-aux') !== null) {\n            textEvalParentNode.querySelector('.tox-tinymce-aux').remove();\n        }\n    }\n\n    editorContainer.querySelector('#id_' + prefix + '_' + field + '_0').setAttribute('style', '');\n    editorContainer.querySelector('#id_' + prefix + '_' + field + '_0').value = '';\n\n    editorContainer.querySelector('#id_' + prefix + '_' + field + '_0')\n        .setAttribute(\n            'name',\n            parentUpdatedField\n                ? prefix + '_' + parentUpdatedField + '_' + counter + '[text]'\n                : prefix + '_' + field + '_' + counter + '[text]'\n        );\n\n    editorContainer.querySelector('#id_' + prefix + '_' + field + '_0')\n        .setAttribute(\n            'id',\n            parentUpdatedField\n                ? 'id_' + prefix + '_' + parentUpdatedField + '_' + counter\n                : 'id_' + prefix + '_' + field + '_' + counter\n        );\n\n    // Format\n    editorContainer.querySelector('#menu' + prefix + '_' + field + '_0format')\n        .setAttribute(\n            'name',\n            parentUpdatedField\n                ? prefix + '_' + parentUpdatedField + '_' + counter + '[format]'\n                : prefix + '_' + field + '_' + counter + '[format]'\n        );\n\n    editorContainer.querySelector('#menu' + prefix + '_' + field + '_0format')\n        .setAttribute(\n            'id',\n            parentUpdatedField\n                ? 'menu' + prefix + '_' + field + '_' + counter + 'format'\n                : 'menu' + prefix + '_' + parentUpdatedField + '_' + counter + 'format'\n        );\n\n    // Itemid\n    editorContainer.querySelector('[name=\"' + prefix + '_' + field + '_0[itemid]\"').setAttribute('value', '');\n    editorContainer.querySelector('[name=\"' + prefix + '_' + field + '_0[itemid]\"')\n        .setAttribute(\n            'name',\n            parentUpdatedField\n                ? prefix + '_' + parentUpdatedField + '_' + counter + '[itemid]'\n                : prefix + '_' + field + '_' + counter + '[itemid]'\n        );\n\n    // Error\n    editorContainer.querySelector('#id_error_' + prefix + '_' + field + '_0')\n        .setAttribute(\n            'id',\n            parentUpdatedField\n                ? 'id_error_' + prefix + '_' + parentUpdatedField + '_' + counter\n                : 'id_error_' + prefix + '_' + field + '_' + counter\n        );\n};\n\nexport const setDeleteButton = (container, elm, counter, subCounter = '') => {\n    let baseSubCounter = subCounter === '' ? '' : '_0';\n\n    container.querySelector('#fitem_id_' + elm + '_0' + baseSubCounter)\n        .setAttribute('id', 'fitem_id_' + elm + '_' + counter + subCounter);\n    container.querySelector('[name=\"' + elm + '_0' + baseSubCounter + '\"]')\n        .setAttribute('id', 'id_' + elm + '_' + counter + subCounter);\n    container.querySelector('[name=\"' + elm + '_0' + baseSubCounter + '\"]')\n        .setAttribute('name', elm + '_' + counter + subCounter);\n    container.querySelector('#id_error_' + elm + '_0' + baseSubCounter)\n        .setAttribute('id', 'id_error_' + elm + '_' + counter + subCounter);\n};\n\n/**\n * @param {object} elm\n * @param {int} currentIndex\n * @param {string} element\n * @param {string} prefix\n */\nexport const updateEditorAndLabel = async(elm, currentIndex, element, prefix) => {\n    let container = elm.querySelector('[id^=\"fitem_id_' + prefix + '_' + element + '_\"]');\n    container.setAttribute('id', 'fitem_id_' + prefix + '_' + element + '_' + (currentIndex - 1));\n\n    let containerLabel = container.querySelector('[for^=\"id_' + prefix + '_' + element + '_\"]');\n    if (containerLabel) {\n        containerLabel.setAttribute('for', 'id_' + prefix + '_' + element + '_' + (currentIndex - 1));\n    }\n\n    await removeTinyEditor('id_' + prefix + '_' + element + '_' + currentIndex);\n\n    let editorTextArea = container.querySelector('[id^=\"id_' + prefix + '_' + element + '_\"]');\n    editorTextArea.setAttribute('id', 'id_' + prefix + '_' + element + '_' + (currentIndex - 1));\n    editorTextArea.setAttribute('name', prefix + '_' + element + '_' + (currentIndex - 1) + '[text]');\n\n    let editorFormat = container.querySelector('[name=\"' + prefix + '_' + element + '_' + currentIndex + '[format]\"]');\n    editorFormat.setAttribute('id', 'menu' + prefix + '_' + element + '_' + (currentIndex - 1) + 'format');\n    editorFormat.setAttribute('name', prefix + '_' + element + '_' + (currentIndex - 1) + '[format]');\n\n    container\n        .querySelector('[name=\"' + prefix + '_' + element + '_' + currentIndex + '[itemid]\"]')\n        .setAttribute('name', prefix + '_' + element + '_' + (currentIndex - 1) + '[itemid]');\n\n    container\n        .querySelector('#id_error_' + prefix + '_' + element + '_' + currentIndex)\n        .setAttribute('id', 'id_error_' + prefix + '_' + element + '_' + (currentIndex - 1));\n};"],"names":["tinyMCEPromise","anchor","anchorInput","document","getElementById","input","createElement","setAttribute","appendChild","fileManagers","querySelectorAll","forEach","fileManager","classList","contains","valueForFormat","getAttribute","includes","restrictions","querySelector","then","valueString","firstElementChild","innerHTML","catch","id","container","i","children","length","updateIcon","element","add","counter","elementName","prefix","parent","parentNode","hidden","insertBefore","dataset","fieldtype","removeUselessColClasses","label","replace","embedContainerId","introductionContainerId","customCheckbox","embedValContainer","value","checked","setEmbedVisible","addEventListener","buttons","addingButtonsContainer","addingButtonContainer","removeAttribute","childNodes","child","type","remove","addingButtons","addingButton","button","initialRemoveButton","style","setProperty","str","toString","removeTinyEditor","getTinyMCE","get","filter","editor","response","draftIdElm","parsedResponse","JSON","parse","data","config","draftitemid","footer","inlineDefaultConfiguration","text","editorDefaultConfig","inlineScript","elementId","baseUrl","Config","wwwroot","M","cfg","jsrev","Promise","resolve","reject","head","script","window","tinyMCE","tinymce","src","async","err","append","node","Array","from","className","startsWith","previousValue","newValue","isActive","newSrc","embedContainer","introductionContainer","editorContainer","field","parentUpdatedField","fromBtnClick","textEvalParentNode","elm","subCounter","baseSubCounter","currentIndex","containerLabel","editorTextArea","editorFormat"],"mappings":"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"}