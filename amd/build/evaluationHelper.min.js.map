{"version":3,"file":"evaluationHelper.min.js","sources":["../src/evaluationHelper.js"],"sourcesContent":["import {\n    buildHiddenInput,\n    handleEmbed,\n    initEditor,\n    prepareActionButton,\n    removeTinyEditor, setDeleteButton,\n    setEditorAfterCloning,\n    updateEditorAndLabel,\n} from \"./utils\";\nimport {validateEvaluationDataForm, validateEvaluationForm} from \"./validator/evaluationValidator\";\nimport {initRedactTools} from \"./toolHelper\";\nimport {get_string as getString} from 'core/str';\nimport {handleAccordions, handleNewAccordion, initAccordionsAfterFillingForm} from \"./accordionHandler\";\n\nconst editorFields = ['title', 'description'];\nlet counterEvaluations = 0;\nlet learningObjectives = [];\n\n/**\n * @param {boolean} fromBtnClick\n */\nasync function addEvaluation(fromBtnClick) {\n    counterEvaluations += 1;\n    let evaluationParent = document.querySelector('#row_course_evaluation_container_0');\n    let evaluation = evaluationParent.cloneNode(true);\n    evaluation.setAttribute('id', 'row_course_evaluation_container_' + counterEvaluations);\n\n    // Header\n    evaluation.querySelector('#course_evaluation_objectives_header_0')\n        .setAttribute('id', 'course_evaluation_objectives_header_' + counterEvaluations);\n    evaluation.querySelector('[href=\"#collapse_evaluation_0\"]').innerText =\n        await getString('evaluation', 'format_udehauthoring') + ' ' + (counterEvaluations + 1);\n    evaluation.querySelector('[href=\"#collapse_evaluation_0\"]')\n        .setAttribute('aria-controls', 'collapse_evaluation_' + counterEvaluations);\n    evaluation.querySelector('[href=\"#collapse_evaluation_0\"]')\n        .setAttribute('href', '#collapse_evaluation_' + counterEvaluations);\n\n    evaluation.querySelector('#collapse_evaluation_0')\n        .setAttribute('id', 'collapse_evaluation_' + counterEvaluations);\n\n    evaluation.querySelector('#course_evaluation_content_0')\n        .setAttribute('id', 'course_evaluation_content_' + counterEvaluations);\n\n    if (evaluation.querySelector('[name=\"evaluation_0_id_value\"]')) {\n        evaluation.querySelector('[name=\"evaluation_0_id_value\"]').setAttribute('value', '');\n        evaluation.querySelector('[name=\"evaluation_0_id_value\"]')\n            .setAttribute('name', 'evaluation_' + counterEvaluations + '_id_value');\n    }\n\n    // Content\n    editorFields.forEach(editorField => {\n        setEditorAfterCloning(evaluation, editorField, 'evaluation', counterEvaluations, null, fromBtnClick);\n    });\n\n    // Delete button\n    setDeleteButton(evaluation, 'remove_evaluation', counterEvaluations);\n\n    // Weight\n    let weight = evaluation.querySelector('#fitem_id_evaluation_weight_0');\n    weight.setAttribute('id', 'fitem_id_evaluation_weight_' + counterEvaluations);\n    weight.querySelector('[for=\"id_evaluation_weight_0\"]')\n        .setAttribute('for', 'id_evaluation_weight_' + counterEvaluations);\n    weight.querySelector('#id_evaluation_weight_0')\n        .setAttribute('name', 'evaluation_weight_' + counterEvaluations);\n    weight.querySelector('#id_evaluation_weight_0').value = '';\n    weight.querySelector('#id_evaluation_weight_0')\n        .setAttribute('id', 'id_evaluation_weight_' + counterEvaluations);\n    weight.querySelector('#id_error_evaluation_weight_0')\n        .setAttribute('id', 'id_error_evaluation_weight_' + counterEvaluations);\n\n    // Learning objective and module\n    ['learning_objectives', 'module'].forEach(elm => {\n        let container = evaluation.querySelector('#fitem_id_evaluation_' + elm + '_0');\n        container.setAttribute('name', 'evaluation_' + elm + '_' + counterEvaluations);\n        container.setAttribute('id', 'fitem_id_evaluation_' + elm + '_' + counterEvaluations);\n        container.querySelector('#evaluation_' + elm + '_title_0')\n            .setAttribute('id', 'evaluation_' + elm + '_title_' + counterEvaluations);\n        container.querySelector('[for=\"fitem_id_evaluation_' + elm + '_0\"]')\n            .setAttribute('for', 'fitem_id_evaluation_' + elm + '_' + counterEvaluations);\n\n        let checkboxes = container.querySelectorAll('.form-group.row');\n        checkboxes.forEach(objective => {\n            let hiddenInput = objective.querySelector('input[type=\"hidden\"][name^=\"evaluation_' + elm + '_0\"]');\n            hiddenInput.setAttribute(\n                'name',\n                hiddenInput.getAttribute('name').replace('0', counterEvaluations)\n            );\n            let input = objective.querySelector('input[type=\"checkbox\"][name^=\"evaluation_' + elm + '_0\"]');\n            input.setAttribute('name', input.getAttribute('name').replace('0', counterEvaluations));\n            input.setAttribute('id', input.getAttribute('id').replace('0', counterEvaluations));\n            input.checked = false;\n\n            let label = objective.querySelector('[for^=\"id_evaluation_' + elm + '_0_\"]');\n            label.setAttribute('for', label.getAttribute('for').replace('0', counterEvaluations));\n        });\n    });\n\n    let container = document.querySelector('#displayable-form-evaluations-container');\n    container.insertBefore(evaluation, document.querySelector('#evaluation-add-container'));\n\n    disableEvaluationDeleteButton();\n    await updateAddEvaluationButton();\n\n    if (fromBtnClick) {\n        handleNewAccordion('#course_evaluation_objectives_header_', counterEvaluations);\n        await handleEditor(counterEvaluations);\n    }\n}\n\nconst handleEditor = async(counter) => {\n    editorFields.forEach(editorField => {\n        window.$.ajax(\n            {\n                type: \"POST\",\n                url: \"../handlers/ajax_editor_handler.php\",\n                data: {\n                    id: document.querySelector(\"#udeh-form\").querySelector('[name = \"course_id\"]').value,\n                    elementId: 'id_evaluation_' + editorField + '_' + counter,\n                    text: ''\n                },\n                success: function(response) {\n                    let draftIdElm = document.querySelector('#row_course_evaluation_container_' + counter)\n                        .querySelector('[name = \"evaluation_' + editorField + '_' + counter + '[itemid]\"]');\n                    initEditor(\n                        response,\n                        draftIdElm\n                    );\n                },\n                error: async function(e) {\n                    window.console.log(e);\n                }\n            });\n    });\n};\n\n/**\n * @param {string} index\n */\nasync function removeEvaluation(index) {\n    let evaluation = document.getElementById('row_course_evaluation_container_' + index);\n    for (const editorField of editorFields) {\n        await removeTinyEditor('id_section_' + editorField + '_' + index);\n    }\n    evaluation.remove();\n    await updateExistingEvaluations(index);\n    await updateAddEvaluationButton();\n    disableEvaluationDeleteButton();\n    updateRemoveEvaluationButton();\n    counterEvaluations = counterEvaluations - 1;\n}\n\n/**\n *\n */\nfunction formatInitialObjList() {\n    let labels = document.querySelectorAll('[for^=\"id_evaluation_learning_objectives_0\"]');\n    for (let i = 0; i < labels.length; i++) {\n        labels[i].setAttribute('style', 'display:flex;');\n    }\n}\n\n/**\n *\n */\nfunction disableEvaluationDeleteButton() {\n    let evaluations = document.querySelectorAll('[id^=\"row_course_evaluation_container_\"]');\n    if (evaluations.length === 1) {\n        let button = document.getElementById('id_remove_evaluation_0');\n        button.hidden = true;\n    } else {\n        let buttons = document.querySelectorAll('[id^=\"id_remove_evaluation\"]');\n        buttons.forEach(button => {\n            button.hidden = false;\n        });\n    }\n}\n\n/**\n *\n */\nfunction updateRemoveEvaluationButton() {\n    let buttons = document.querySelectorAll('[id^=\"fitem_id_remove_evaluation_\"]');\n    buttons.forEach(function(button, index) {\n        button.setAttribute('id', 'fitem_id_remove_evaluation_' + index);\n        let buttonElm = button.querySelector('[type=\"button\"]');\n        buttonElm.setAttribute('name', 'remove_evaluation_' + index);\n        buttonElm.setAttribute('id', 'id_remove_evaluation_' + index);\n    });\n}\n\n/**\n *\n */\nasync function updateAddEvaluationButton() {\n    let x = document.querySelectorAll('[id^=\"row_course_evaluation_container_\"]');\n    let addEvaluationButtonContainer = document.getElementById('evaluation-add-container');\n    let addEvaluationButtonText = addEvaluationButtonContainer.querySelector('.add-text');\n    addEvaluationButtonText.innerHTML = await getString('evaluation', 'format_udehauthoring') + ' ' + (x.length + 1);\n}\n\n/**\n * @param {string} index\n */\nasync function updateExistingEvaluations(index) {\n    let evaluations = document.querySelectorAll('[id^=\"row_course_evaluation_container_\"]');\n    for (const evaluation of evaluations) {\n        if (parseInt(evaluation.id.substring(evaluation.id.lastIndexOf('_') + 1)) > parseInt(index)) {\n            let currentIndex = parseInt(evaluation.id.substring(evaluation.id.lastIndexOf('_') + 1));\n            evaluation.setAttribute('id', 'row_course_evaluation_container_' + (currentIndex - 1));\n            let header = evaluation.querySelector('.accordion-header');\n            header.setAttribute('id', 'course_evaluation_header_' + (currentIndex - 1));\n            header.firstElementChild.setAttribute('href', '#collapse_evaluation_' + (currentIndex - 1));\n            header.firstElementChild.setAttribute('aria-controls', 'collapse_evaluation_' + (currentIndex - 1));\n            header.firstElementChild.innerHTML = await getString('evaluation', 'format_udehauthoring') + ' ' + (currentIndex);\n\n\n            let collapsible = evaluation.querySelector('.collapse');\n            collapsible.setAttribute('id', 'collapse_evaluation_' + (currentIndex - 1));\n            collapsible.firstElementChild.setAttribute('id', 'course_evaluation_content_' + (currentIndex - 1));\n            collapsible.firstElementChild.children[0].setAttribute('name', 'evaluation_' + (currentIndex - 1) + '_id_value');\n            updateExistingWeight(evaluation, currentIndex);\n            updateExistingEvaluationObjectives(evaluation, currentIndex);\n            updateExistingModules(evaluation, currentIndex);\n            await updateEditorAndLabel(evaluation, currentIndex, 'title', 'evaluation');\n            await updateEditorAndLabel(evaluation, currentIndex, 'description', 'evaluation');\n            await handleEditor((currentIndex - 1));\n        }\n    }\n}\n\n/**\n * @param {object} evaluation\n * @param {string} currentIndex\n */\nfunction updateExistingModules(evaluation, currentIndex) {\n    let moduleContainer = evaluation.querySelector('[id^=\"fitem_id_evaluation_module_\"]');\n    moduleContainer.setAttribute('id', 'fitem_id_evaluation_module_' + (currentIndex - 1));\n    let labelTitle = moduleContainer.querySelector('[for^=\"id_evaluation_module_\"]');\n    labelTitle.setAttribute('for', 'id_evaluation_module_' + (currentIndex - 1));\n}\n\n/**\n * @param {object} evaluation\n * @param {string} currentIndex\n */\nfunction updateExistingEvaluationObjectives(evaluation, currentIndex) {\n    let objContainer = evaluation.querySelector('[id^=\"fitem_id_evaluation_learning_objectives_\"]');\n    objContainer.setAttribute('id', 'fitem_id_evaluation_learning_objectives_' + (currentIndex - 1));\n    objContainer.children[0].setAttribute('id', 'evaluation_learning_objectives_title_' + (currentIndex - 1));\n    objContainer.children[0].children[0].setAttribute('for', 'evaluation_learning_objectives_title_' + (currentIndex - 1));\n    let checkboxes = objContainer.querySelectorAll('[class^=\"form-group row  fitem  \"]');\n    checkboxes.forEach(checkbox => {\n        let innerContainer = checkbox.querySelector('[class^=\"form-check d-flex\"]');\n        let currentObjId = innerContainer.children[0].name\n            .substring(innerContainer.children[0].name.indexOf('[') + 1, innerContainer.children[0].name.indexOf(']'));\n        innerContainer.children[0].name = 'evaluation_learning_objectives_' + (currentIndex - 1) + '[' + currentObjId + ']';\n        innerContainer.children[1].name = 'evaluation_learning_objectives_' + (currentIndex - 1) + '[' + currentObjId + ']';\n        innerContainer.children[1].id = 'id_evaluation_learning_objectives_' + (currentIndex - 1) + '_' + currentObjId;\n        innerContainer.children[2].setAttribute('for', 'id_evaluation_learning_objectives_' + (currentIndex - 1));\n    });\n}\n\n/**\n * @param {object} evaluation\n * @param {string} currentIndex\n */\nfunction updateExistingWeight(evaluation, currentIndex) {\n    let weightContainer = evaluation.querySelector('[id^=\"fitem_id_evaluation_weight_\"]');\n    weightContainer.setAttribute('id', 'fitem_id_evaluation_weight_' + (currentIndex - 1));\n    let labelTitle = weightContainer.querySelector('[for^=\"id_evaluation_weight_\"]');\n    labelTitle.setAttribute('for', 'id_evaluation_weight_' + (currentIndex - 1));\n    let input = evaluation.querySelector('[id^=\"id_evaluation_weight_\"]');\n    input.setAttribute('id', 'id_evaluation_weight_' + (currentIndex - 1));\n    input.setAttribute('name', 'evaluation_weight_' + (currentIndex - 1));\n}\n\n/**\n * @param {object} evaluation\n * @param {int} index\n */\nfunction fillFormCommonPart(evaluation, index) {\n    let weight = document.getElementById('id_evaluation_weight_' + index);\n    weight.value = evaluation.weight;\n\n    evaluation.learningobjectiveids.forEach(element => {\n\n        let learningObjectiveElement = document\n            .getElementById('id_evaluation_learning_objectives_' + index + '_' + element.audehlearningobjectiveid);\n        if (learningObjectiveElement) {\n            learningObjectiveElement.checked = true;\n        }\n\n    });\n\n    if (evaluation.audehsectionids) {\n        for (const prop in evaluation.audehsectionids) {\n            if (document.getElementById('id_evaluation_module_' + index + '_' + prop)) {\n                document.getElementById('id_evaluation_module_' + index + '_' + prop).checked = true;\n            }\n        }\n    }\n}\n\n/**\n *\n */\nfunction placeLearningObjectivesTooltip() {\n    let initialContainer = document.getElementById('fitem_id_evaluation_learning_objectives_0');\n    let rows = initialContainer.querySelectorAll('.form-group');\n    if (typeof rows[rows.length - 1] !== 'undefined') {\n        let tooltipContainer = rows[rows.length - 1].children[1].firstElementChild.getElementsByTagName('div');\n\n        if (tooltipContainer[0]) {\n            let headerContainer = document.getElementById('evaluation_learning_objectives_title_0');\n            headerContainer.appendChild(tooltipContainer[0]);\n        }\n    }\n}\n\n/**\n *\n */\nexport function initEvaluations() {\n    validateEvaluationForm();\n    formatInitialObjList();\n\n    const formContainer = document.getElementById('form_container');\n    formContainer.addEventListener('click', async event => {\n        const isButton = event.target.nodeName === 'BUTTON'\n            || (event.target.nodeName === 'I' && event.target.parentNode && event.target.parentNode.nodeName === 'BUTTON');\n        if (!isButton) {\n            return;\n        } else {\n            let element = null;\n            if (event.target.nodeName === 'I') {\n                element = event.target.parentNode;\n            } else {\n                element = event.target;\n            }\n            if (element && element.id.includes('evaluation') && element.hidden === false) {\n                if (element.id.includes('remove')) {\n                    let id = element.id.substring(element.id.lastIndexOf('_') + 1);\n                    await removeEvaluation(id);\n                    document.getElementById('udeh-form').dataset.changed = 'true';\n                    event.stopImmediatePropagation();\n                }\n            } else {\n                return;\n            }\n        }\n    });\n    let addButton = document.querySelector('#id_add_evaluation');\n    addButton.addEventListener('click', async event => {\n        const isButton = event.target.nodeName === 'BUTTON'\n            || (event.target.nodeName === 'I' && event.target.parentNode && event.target.parentNode.nodeName === 'BUTTON');\n        if (!isButton) {\n            return;\n        } else {\n            event.stopImmediatePropagation();\n            let element = null;\n            if (event.target.nodeName === 'I') {\n                element = event.target.parentNode;\n            } else {\n                element = event.target;\n            }\n            if (element && element.id.includes('evaluation') && element.hidden === false) {\n                await addEvaluation(true);\n                document.getElementById('udeh-form').dataset.changed = 'true';\n            } else {\n                return;\n            }\n        }\n    });\n    let addingButtonsContainer = document.\n        querySelectorAll(\"[class='col-md-9 form-inline align-items-start felement']\");\n    if (addingButtonsContainer) {\n        addingButtonsContainer.forEach(function(addingButtonContainer) {\n            if (addingButtonContainer.dataset.fieldtype === 'button') {\n                addingButtonContainer.removeAttribute('class');\n                let childNodes = addingButtonContainer.childNodes;\n                childNodes.forEach(child => {\n                    if (child.type && child.type === 'button') {\n                        child.classList.remove('btn-secondary');\n                    }\n                });\n            }\n\n        });\n    }\n    let addingButtons = document.querySelectorAll(\"[class*='add_action_button']\");\n    if (addingButtons) {\n        addingButtons.forEach(function(addingButton) {\n            let childNodes = addingButton.childNodes;\n            childNodes.forEach(child => {\n                child.removeAttribute('class');\n            });\n        });\n    }\n    disableEvaluationDeleteButton();\n    // prepareAccordions('row_course_evaluation_container_');\n    placeLearningObjectivesTooltip();\n    formatInitialObjList();\n}\n\n/**\n * @param {array} evaluations\n * @param {array} objList\n */\nexport async function fillFormEvaluations(evaluations, objList) {\n    handleObjList(objList);\n    for (const evaluation of evaluations) {\n        const i = evaluations.indexOf(evaluation);\n        if (i === 0) {\n            buildHiddenInput(evaluation.id, i, 'fitem_id_evaluation_title_' + (i), 'evaluation_');\n            document.querySelector('[name = \"evaluation_0_id_value\"]').setAttribute('value', evaluation.id);\n        } else {\n            if (document.getElementById('id_evaluation_title_' + i) === null) {\n                await addEvaluation(false);\n            }\n            editorFields.forEach(editorField => {\n                document.querySelector('#id_evaluation_' + editorField + '_' + i).value = evaluation[editorField];\n            });\n            document.querySelector('[name = \"evaluation_' + i + '_id_value\"]')\n                .setAttribute('value', evaluation.id);\n            await handleEditor(i);\n        }\n        fillFormCommonPart(evaluation, i);\n    }\n    prepareActionButton([\n        {type: 0, id: 'evaluation_0'},\n        {type: 1, id: 'evaluation'}]);\n    disableEvaluationDeleteButton();\n    styleCheckbox();\n    initAccordionsAfterFillingForm();\n    handleAccordions();\n}\n\n/**\n * @param {array} objList\n */\nfunction handleObjList(objList) {\n    learningObjectives = [];\n    objList.forEach(function(teachingObj) {\n        learningObjectives.push(teachingObj.learningobjectives);\n    });\n}\n\nconst styleCheckbox = () => {\n    let checkboxes = document.querySelectorAll('[class~=\"checkbox\"]');\n    checkboxes.forEach(checkbox => {\n        checkbox.querySelector('label').classList.add(['pr-5'], ['w-100']);\n    });\n};\n\n/**\n * @param {string} evalName\n */\nexport function initPhpEvaluationValidation(evalName) {\n    validateEvaluationDataForm();\n    handleEmbed('fitem_id_evaluation_introduction_embed', 'fitem_id_evaluation_introduction');\n    initRedactTools(2, [evalName]);\n}"],"names":["evaluations","objList","learningObjectives","forEach","teachingObj","push","learningobjectives","handleObjList","evaluation","i","indexOf","id","document","querySelector","setAttribute","getElementById","addEvaluation","editorFields","editorField","value","handleEditor","fillFormCommonPart","type","disableEvaluationDeleteButton","styleCheckbox","formatInitialObjList","addEventListener","async","event","target","nodeName","parentNode","element","includes","hidden","substring","lastIndexOf","index","remove","querySelectorAll","parseInt","currentIndex","header","firstElementChild","innerHTML","collapsible","children","updateExistingWeight","updateExistingEvaluationObjectives","updateExistingModules","updateExistingEvaluations","updateAddEvaluationButton","button","buttonElm","counterEvaluations","removeEvaluation","dataset","changed","stopImmediatePropagation","addingButtonsContainer","addingButtonContainer","fieldtype","removeAttribute","childNodes","child","classList","addingButtons","addingButton","rows","length","tooltipContainer","getElementsByTagName","appendChild","placeLearningObjectivesTooltip","evalName","fromBtnClick","cloneNode","innerText","weight","elm","container","objective","hiddenInput","getAttribute","replace","input","checked","label","insertBefore","window","$","ajax","url","data","elementId","counter","text","success","response","draftIdElm","error","e","console","log","labels","x","moduleContainer","objContainer","checkbox","innerContainer","currentObjId","name","weightContainer","learningobjectiveids","learningObjectiveElement","audehlearningobjectiveid","audehsectionids","prop","add"],"mappings":"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"}